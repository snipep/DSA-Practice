T.C ==>> O(LogN)
S.C ==>> O(1)

class Solution:
    def singleNonDuplicate(self, arr: List[int]) -> int:
        low, high = 0, len(arr)-2
        while low <= high:
            mid = (low+high) // 2
            if arr[mid] != arr[mid + 1] and arr[mid] != arr[mid - 1]:
                return arr[mid]

            if (mid % 2 == 1 and arr[mid] == arr[mid - 1]) or (mid % 2 == 0 and arr[mid] == arr[mid + 1]):
                low = mid + 1

            else:
                high = mid - 1
        return arr[low]
