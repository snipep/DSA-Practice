T.C ==>> O(N)
S.C ==>> O(N)

from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if root is None:
            return []
        ans = []
        q = deque([root])
        flag = 0
        while q:
            size = len(q)
            level_node = deque()
            for _ in range(size):
                node = q.popleft()
                if flag % 2 == 0:
                    level_node.append(node.val)
                else:
                    level_node.appendleft(node.val)

                if node.left:
                    q.append(node.left)
                if node.right:
                    q.append(node.right)
            ans.append(level_node)
            flag += 1
        return ans
