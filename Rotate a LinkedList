# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head

        len1 = 1 
        temp = head
        while temp.next is not None:
            len1 += 1
            temp = temp.next
        
        temp.next = head
        new_k = k % len1

        x = len1 - new_k

        for _ in range(x):
            temp = temp.next
            x -= 1
        head = temp.next
        temp.next = None
        return head
