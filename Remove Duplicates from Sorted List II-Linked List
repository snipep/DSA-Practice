# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head

        dummy = ListNode(0)
        curr = head
        dummy.next = curr

        hashmap = {}
        while curr:
            if curr.val not in hashmap:
                hashmap[curr.val] = 1
            else:
                hashmap[curr.val] += 1
            curr = curr.next
        
        prev = dummy
        curr = head
        while curr:
            if hashmap[curr.val] > 1:
                prev.next = curr.next
            else:
                prev = curr
            curr = curr.next
        return dummy.next
