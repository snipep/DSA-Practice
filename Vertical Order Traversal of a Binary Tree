from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalTraversal(self, root: Optional[TreeNode]) -> List[List[int]]:
        mpp = {}
        stack = deque()
        stack.append((root,(0,0)))

        if root is None:
            return []

        while stack:
            node,(x,y) = stack.popleft()
            mpp.setdefault(x, {}).setdefault(y, []).append(node.val)
            if node.left is not None:
                stack.append((node.left,(x-1,y+1)))
            if node.right is not None:
                stack.append((node.right,(x+1,y+1)))
        
        ans = []
        print(mpp)
        print("items: ", mpp[0][0])
        for x in sorted(mpp.keys()):
            col = []
            for y in sorted(mpp[x].keys()):
                nodes = sorted(mpp[x][y])
                col += nodes
            ans.append(col)
        return ans
