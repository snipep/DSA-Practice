# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        maxi = [float('-inf')]
        def maxPath(root,maxi):
            if root is None:
                return 0
            left_sum = max(0, maxPath(root.left, maxi))
            right_sum = max(0, maxPath(root.right, maxi))
            maxi[0] = max(maxi[0],(left_sum + right_sum + root.val))

            return root.val + max(left_sum , right_sum)
        
        maxPath(root,maxi)
        return maxi[0]
