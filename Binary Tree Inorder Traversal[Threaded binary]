# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    # Morris Traversal Using Threaded Binary
    # T.C ==>> O(N)
    # S.C ==>> O(1)
    def inorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        res = []
        curr = root 
        while curr is not None:
            if curr.left is None:
                res.append(curr.val)
                curr = curr.right
            else:
                prev = curr.left
                while prev.right is not None and prev.right != curr:
                    prev = prev.right
                if prev.right is None:
                    prev.right = curr
                    curr = curr.left
                else:
                    prev.right = None
                    res.append(curr.val)
                    curr = curr.right
        return res
