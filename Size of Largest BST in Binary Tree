from os import *
from sys import *
from collections import *
from math import *
'''
    ------- Binary Tree node structure -------
            class TreeNode :
                def __init__(self, data) :
                    self.data = data
                    self.left = None
                    self.right = None
'''
class NodeValue:
    def __init__(self, minNode, maxNode, maxSize):
        self.minNode = minNode
        self.maxNode = maxNode
        self.maxSize = maxSize


def largestBST(root):
    def largestBSTSubtreeHelper(root):
        if not root:
            return NodeValue(float('inf'), float('-inf'), 0)
            
        left = largestBSTSubtreeHelper(root.left)
        right = largestBSTSubtreeHelper(root.right)
            
        if left.maxNode < root.data < right.minNode:
            return NodeValue(min(root.data, left.minNode), max(root.data, right.maxNode),
                             left.maxSize + right.maxSize + 1)
            
        return NodeValue(float('-inf'), float('inf'), max(left.maxSize, right.maxSize))
        
    return largestBSTSubtreeHelper(root).maxSize
