T.C ==> O(N)
S.C ==>> O(N)

import queue
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def widthOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        if root is None:
            return []
        ans = 0
        q = [(root,0)]
        while q:
            size = len(q)
            left_most, right_most = 0, 0
            for i in range(size):
                node,curr_id = q.pop(0)
                if i == 0:
                    left_most = curr_id
                if i == size-1:
                    right_most = curr_id
                if node.left:
                    q.append((node.left, curr_id * 2 + 1))
                if node.right:
                    q.append((node.right, curr_id * 2 + 2))
            ans = max(ans, right_most - left_most + 1)
        return ans
