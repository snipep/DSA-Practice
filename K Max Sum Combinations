import heapq

def kMaxSumCombination(A, B, n, C):
    A.sort(reverse=True)
    B.sort(reverse=True)
    ans = []
    heap = []
    visited = set()
    
    heapq.heappush(heap,(-(A[0] + B[0]), 0, 0))
    visited.add((0,0))
    
    for _ in range(C):
        val, i, j = heapq.heappop(heap)
        ans.append(-val)
        if i+1 < n and (i+1,j) not in visited:
            heapq.heappush(heap, (-(A[i+1] + B[j]), i+1, j))
            visited.add((i+1, j))
        if j+1 < n and (i, j+1) not in visited:
            heapq.heappush(heap, (-(A[i] + B[j+1]), i, j+1))
            visited.add((i, j+1))
        
    return ans
    
