# Morris Traversal[using threaded binary]
    # T.C ==>> O(N)
    # S.C ==>> O(1)
    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        if root is None:
            return []
        ans = []
        curr = root
        while curr is not None:
            if curr.left is None:
                ans.append(curr.val)
                curr = curr.right
            else:
                prev = curr.left
                while prev.right is not None and prev.right != curr:
                    prev = prev.right
                
                if prev.right is None:
                    prev.right = curr
                    ans.append(curr.val)
                    curr = curr.left
                else:
                    prev.right = None
                    curr = curr.right
        return ans
